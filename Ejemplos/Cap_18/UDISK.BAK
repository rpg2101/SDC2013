;=====================================
; UDISK 1.0
;
; Programa de utilidad para manipular
; el sistema de archivos
;=====================================

;-------------------------------------
; Constantes para facilitar el uso
; de los colores
;-------------------------------------
AZUL     equ   1
BLANCO   equ   15
REVERSE  equ   70h

;*************************************
; Segmento de pila
;*************************************
        segment Pila stack
          resw 512
FinPila:

;*************************************
; Segmento de datos
;*************************************
        segment Datos
  ;-----------
  ; Mensaje de derechos y 
  ; varios avisos
  ;-----------
COPYRIGHT db 'UDISK 1.0',13,10 
          db 'Utilidad para manipulación de archivos'
          db 13,10
          db 'Francisco Charte Ojeda',13,10,10,'$'
          
MEN1      db 'Leyendo el directorio ...$'
MEN2      db 'Directorio vacío.$'
MEN3      db 22,26,AZUL,'Ordenando ...',0
MEN4      db 21,25,REVERSE + AZUL
          db 'Introduzca la nueva referencia ', 0
MEN5      db 21,25,REVERSE + AZUL
          db 'Introduzca el camino del nuevo directorio ', 0
MEN6      db 22,25,REVERSE + AZUL
          db 'Se produce un error. Pulse una tecla.', 0
MEN7      db 21,25,REVERSE + AZUL
          db 'Introduzca la letra de la nueva unidad de disco ', 0
MEN8      db 21,25,REVERSE + AZUL
          db 'Borrar (T)odos o (U)no ', 0
MEN9      db 21,25,REVERSE + AZUL
          db 'Escriba el nuevo nombre del archivo ', 0
MEN0      db 21,25,REVERSE + AZUL
          db 'Escriba el nombre del archivo destino ', 0
  ;-----------
  ; Variables para pedir la referencia de archivos
  ; sobre la que se trabajará, así como el 
  ; directorio al que se desea cambiar
  ;-----------
REFER     db 22,25,AZUL,12
          times 12 db ' ' 
          db 0
          
DIREC     db 22,25,AZUL,50
          times 50 db ' '
          db 0                                                 
  ;-----------
  ; Los dos campos siguientes servirán para borrar
  ; la ventana de mensajes
  ;-----------
BORR1     db 21,24,BLANCO
          times 54 db ' '
          db 0
     
BORR2     db 22,24,BLANCO
          times 54 db ' '
          db 0
  ;-----------
  ; Este campo se usará para obtener un 
  ; directorio de los archivos a tratar,
  ; en principio todos
  ;-----------
TODOS     db '*.*         ', 0
  ;-----------
  ; A medida que vayan leyéndose archivos
  ; se irán imprimiendo puntos
  ;-----------
PUNTO     db '.$'
  ;-----------
  ; Los 128 bytes siguientes se utilizarán
  ; como área de transferencia de datos
  ;-----------
DTA       resb 128
  ;-----------
  ; En este campo se guardará la dirección del
  ; nombre del último archivo del directorio
  ;-----------
FINAL     dw 0

CUENTA    dw 0   ; Número de archivos en el directorio
LINEA     db 0   ; Línea actual en pantalla
PUNT1     dw 0   ; Archivo seleccionado en pantalla
PUNT2     dw 0   ; Primer archivo que aparece en pantalla
  ;-----------
  ; Variable para ir imprimiendo en la ventana
  ; de archivos los nombres de éstos. Aunque en
  ; la línea se indica 0 se modificará desde el código
  ;-----------
LIN_VEN   db 0,6,AZUL
          resb 12
          db 0
  ;-----------
  ; Zona para almacenar los nombres de los
  ; archivos existentes en el directorio
  ;-----------
DIRECTO   resb 12*512
  ;-----------
  ; Variable temporal para intercambios
  ; al ordenar
  ;-----------
TEMP      resb 12
  ;-----------
  ; Direcciones de los elementos que 
  ; se están comparando
  ;-----------
ELEM1     dw 0
ELEM2     dw 0
  ;-----------
  ; Variables para almacenar los manejadores
  ; de entrada y salida y buffer de almacenamiento
  ; tempora para la opción de copia de archivos
  ;-----------
HANDLE_IN   dw 0
HANDLE_OUT  dw 0
BUFF_COPIA  resb 1024
  ;-----------
  ; Línea de cabecera de la pantalla.
  ; En la variable ACTUAL se almacenará el camino
  ; del directorio actual, y en CADENA el número
  ; de archivos seleccionados
  ;-----------
LIN1   db 0,0,REVERSE + AZUL
       db '  UDISK Versión 1.0          '
ACTUAL db '                              '
CADENA db '     '
       db ' Archivos   ', 0
  ;-----------
  ; Líneas que componen la pantalla
  ;-----------
PAN  db  2, 3,BLANCO,201
     times 16 db 205
     db 187,0
     
     db  3, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F1 - Ordena directorio por nombre',0
     
     db  4, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db  5, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F2 - Ordena directorio por extensión',0
     
     db  6, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db  7, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F3 - Borra archivo(s)',0
     
     db  8, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db  9, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F4 - Renombra archivo',0
     
     db 10, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db 11, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F5 - Copia archivo',0
     
     db 12, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db 13, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F6 - Cambia de disco',0
     
     db 14, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db 15, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F7 - Cambia de directorio',0
     
     db 16, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db 17, 3,BLANCO,186
     times 16 db ' '
     db 186,'  F8 - Establecer referencia de búsqueda',0
     
     db 18, 3,BLANCO,186
     times 16 db ' '
     db 186,0
     
     db 19, 3,BLANCO,186
     times 16 db ' '
     db 186,'  ESC - Salir al DOS',0
     
     db 20, 0,BLANCO,186
     times 16 db ' '
     db 186,'  ',201
     times 54 db 205
     db 187,0
     
     db 21, 3,BLANCO,186
     times 16 db ' '
     db 186,'  ',186
     times 54 db ' '
     db 186,0
     
     db 22, 3,BLANCO,186
     times 16 db ' '
     db 186,'  ',186
     times 54 db ' '
     db 186,0
     
     db 23, 3,BLANCO,200
     times 16 db 205
     db 188,'  ',200
     times 54 db 205
     db 188,0
     
     db 255
  ;-----------
  ; Buffer para obtener el camino
  ; del directorio actual
  ;-----------
CAMINO resb 128
  ;-----------
  ; Tabla de opciones. Por cada opción
  ; se almacena un byte con el código
  ; extendido de la tecla de elección y
  ; una palabra con la dirección de la
  ; rutina a ejecutar por dicha tecla
  ;-----------
OPCIONES db 72
         dw SUBIR
         db 80
         dw ABAJO
         db 59
         dw ORDEN1
         db 60
         dw ORDEN2
         db 61
         dw BORR
         db 62
         dw RENOMBRAR
         db 63
         dw COPIAR
         db 64
         dw DISCO
         db 65
         dw DIRECTORIO
         db 66
         dw REFERENCIA
          
;*************************************
; Segmento de código
;*************************************
        segment Codigo
..start:
        mov ax, Datos
        mov ds, ax
        
        ; Imprimir el mensaje de copyright
        mov dx,COPYRIGHT
        mov ah,9
        int 21h

        mov ah, 4ch
        int 21h
        
SUBIR:
ABAJO:
ORDEN1:
ORDEN2:
BORR:
RENOMBRAR:
COPIAR:
DISCO:
DIRECTORIO:
REFERENCIA:        
        
        
;-----------------------------
; Este procedimiento convierte
; el valor de AX en una cadena
; de hasta cinco caracteres
; 
; Entrada: AX = número a convertir
;          ES:DI = destino cadena
;-----------------------------
EnteroCadena:
        ; DX debe estar a cero
        push dx ; lo guardamos
        xor dx, dx
        
        ; establecemos valor inicial
        mov byte [di], '0'
        
        ; comprobamos si AL es cero
        or ax, ax
        ; de ser así, no hay más
        ; que hacer
        jz FinConversion

        push bx ; guardamos bx
        ; y establecemos el divisor
        mov bx, 10        
        
 Bucle0:
        ; vamos dividiendo por 10
        div bx 
        
        ; quedándonos con el resto
        ; que convertimos a ASCII
        add dl, '0'
        ; y guardamos
        mov [di], dl
        ; retrocediendo al dígito anterior
        dec di
        
        ; eliminamos el contenido
        ; de DX para quedarnos con
        ; el cociente de AX
        xor dx, dx
        
        ; si el cociente es mayor que 9
        cmp ax, 9
        ; seguimos dividiendo
        ja Bucle0
        
        ; en caso contrario guardamos
        add al, '0'
        mov [di], al
        
        pop bx ; recuperamos BX
        
FinConversion:
        pop dx ; recuperamos DX
        ret
                